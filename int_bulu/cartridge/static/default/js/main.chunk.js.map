{"version":3,"sources":["styles/SampleChoice.module.scss","Store.js","components/Sample.js","SampleChoice.js","index.js"],"names":["module","exports","API_URL","window","location","hostname","SampleChoiceStore","dataLoaded","dataLoading","month","choices","selected","post","id","a","data","customer_id","customerId","box_type","type","date","fetch","method","mode","headers","body","JSON","stringify","then","res","json","catch","console","log","updateChoice","set","loadChoices","undefined","user","setTimeout","samples","key","value","this","loyaltyID","expirationDate","document","querySelectorAll","length","decorate","observable","computed","canChoose","action","get","createContext","observer","props","store","useContext","Store","sample","className","SampleColumn","SampleButton","SampleSelected","inStock","SampleOutOfStock","join","onClick","SampleImageContainer","SampleImage","src","img","alt","name","SampleName","checked","readOnly","htmlFor","SampleDescription","description","style","color","radios","getElementsByName","i","addEventListener","ImageColumn","Subtitle","ChoiceColumn","LoadingImage","width","map","choice","fontSize","marginBottom","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.118ee241.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChoiceColumn\":\"SampleChoice_ChoiceColumn__1yc_n\",\"Subtitle\":\"SampleChoice_Subtitle___l3H1\",\"SampleColumn\":\"SampleChoice_SampleColumn__16Rys\",\"SampleButton\":\"SampleChoice_SampleButton__3Y8xd\",\"SampleImageContainer\":\"SampleChoice_SampleImageContainer__1dwyf\",\"SampleImage\":\"SampleChoice_SampleImage__3p-Fk\",\"SampleName\":\"SampleChoice_SampleName__3nWZ7\",\"SampleDescription\":\"SampleChoice_SampleDescription__3OD1B\",\"SampleOutOfStock\":\"SampleChoice_SampleOutOfStock__10cah\",\"LoadingImage\":\"SampleChoice_LoadingImage__3khdl\",\"ImageColumn\":\"SampleChoice_ImageColumn__36ZDi\"};","import { createContext } from 'react'\r\nimport { decorate, observable, action, computed } from 'mobx'\r\nimport 'whatwg-fetch'\r\n\r\nconst API_URL = window.location.hostname === 'localhost' || window.location.hostname === 'gnc.staging.bulubox.com'\r\n  ? 'https://gnc-dev.bulubox.com/choice/'\r\n  : '/on/demandware.store/Sites-GNC-Site/default/Bulu-Connect'\r\n\r\n\r\nexport class SampleChoiceStore {\r\n  dataLoaded = false\r\n  dataLoading = false\r\n\r\n  month = null\r\n  choices = []\r\n  selected = 0\r\n\r\n  set(key, value) {\r\n    this[key] = value\r\n  }\r\n\r\n  get customerId() {\r\n    return window.user.loyaltyID\r\n  }\r\n\r\n  get date() {\r\n    if(window.expirationDate !== undefined) {\r\n      return window.expirationDate\r\n    }\r\n    return '2020-05-28'\r\n  }\r\n\r\n  get type() {\r\n    let type = 1\r\n    try {\r\n      type = document.querySelectorAll(\"input[name=probox]:checked\")[0].value\r\n    } catch {}\r\n    return type\r\n  }\r\n\r\n  get canChoose() {\r\n    return this.dataLoaded && this.choices.length > 0\r\n  }\r\n\r\n  post = async id => {\r\n    let data = {\r\n      customer_id: this.customerId,\r\n      box_type: this.type,\r\n      date: this.date,\r\n      id: this.selected\r\n    }\r\n    return await fetch(API_URL, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(res => res.json())\r\n    .catch(console.log)\r\n  }\r\n\r\n  updateChoice = async id => {\r\n    // Don't spam if they click the same one\r\n    if(id === this.selected) {\r\n      return\r\n    }\r\n    this.set('selected', id)\r\n    this.post(id)\r\n  }\r\n\r\n  loadChoices = async () => {\r\n    this.set('dataLoading', true)\r\n    this.set('dataLoaded', false)\r\n    this.set('selected', 0)\r\n\r\n    if (window.user === undefined) {\r\n      setTimeout(this.loadChoices, 100)\r\n    } else {\r\n      let data = await this.post()\r\n      if(data.samples && data.month) {\r\n        this.set('month', data.month)\r\n        this.set('choices', data.samples)\r\n        if(data.selected) {\r\n          this.set('selected', data.selected);\r\n        }\r\n      }\r\n      this.set('dataLoaded', true)\r\n      this.set('dataLoading', false)\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(SampleChoiceStore, {\r\n  dataLoaded: observable,\r\n  dataLoading: observable,\r\n  month: observable,\r\n  choices: observable,\r\n  selected: observable,\r\n\r\n  type: computed,\r\n  customerId: computed,\r\n  date: computed,\r\n  canChoose: computed,\r\n\r\n  set: action,\r\n  get: action,\r\n  updateChoice: action,\r\n  loadChoices: action,\r\n})\r\n\r\nexport default createContext(new SampleChoiceStore())\r\n","import React, { useContext } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Store from '../Store'\r\n\r\nimport {\r\n  SampleColumn,\r\n  SampleButton,\r\n  SampleSelected,\r\n  SampleOutOfStock,\r\n  SampleName,\r\n  SampleDescription,\r\n  SampleImageContainer,\r\n  SampleImage,\r\n} from '../styles/SampleChoice.module.scss'\r\n\r\n\r\nexport const Sample = props => {\r\n  const store = useContext(Store)\r\n  const sample = props.sample\r\n  return (\r\n    <div className={SampleColumn}>\r\n      <div className={[\r\n          SampleButton,\r\n          (store.selected === sample.id ? SampleSelected : ''),\r\n          (sample.inStock ? '' : SampleOutOfStock),\r\n        ].join(' ')}\r\n        key={sample.id}\r\n        onClick={() => {\r\n          if(sample.inStock) {\r\n            store.updateChoice(sample.id)\r\n          }\r\n        }}\r\n      >\r\n        <div className={SampleImageContainer}>\r\n          <img className={SampleImage} src={sample.img} alt={sample.name}/>\r\n        </div>\r\n        <p className={SampleName}>{sample.name}</p>\r\n        {sample.inStock &&\r\n        <div>\r\n          <input id={sample.id} className=\"input-radio\" type=\"radio\" name=\"sample\" value={sample.id} checked={store.selected === sample.id} readOnly={true}></input>\r\n          <label htmlFor={sample.id}></label>\r\n          <p className={SampleDescription}>{sample.description}</p>\r\n        </div>\r\n        }\r\n        {!sample.inStock &&\r\n          <p className={SampleName} style={{color: '#e31837'}}>Out of Stock</p>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(Sample)\r\n","import React, { useContext } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport Store from './Store'\r\nimport Sample from './components/Sample'\r\n\r\nimport {\r\n  ChoiceColumn,\r\n  Subtitle,\r\n  LoadingImage,\r\n  ImageColumn,\r\n} from './styles/SampleChoice.module.scss'\r\n\r\nexport const SampleChoice = () => {\r\n  const store = useContext(Store)\r\n\r\n  const radios = document.getElementsByName('probox')\r\n  for (var i=0; i < radios.length; i++) {\r\n    radios[i].addEventListener('change', store.loadChoices)\r\n  }\r\n\r\n  if(!store.dataLoaded && !store.dataLoading) {\r\n    store.loadChoices()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={ImageColumn}>\r\n        <label>\r\n          {(!store.dataLoaded || store.canChoose) && <span>Choose Your Sample</span>}\r\n          {store.dataLoaded && !store.canChoose && <span>Check Back Later</span>}\r\n        </label>\r\n        {store.canChoose &&\r\n          <div>\r\n            <p className={Subtitle}>\r\n              Choose a sample for your {store.month} box.*\r\n            </p>\r\n            <p className={Subtitle}>\r\n              Your sample choice will be recorded each time you click on a radio button.\r\n            </p>\r\n            <p className={Subtitle}>\r\n              The other samples in your PRO Box will be chosen for you based on your selected box type.\r\n            </p>\r\n          </div>\r\n        }\r\n        {store.dataLoaded && !store.canChoose &&\r\n          <p className={Subtitle}>It’s not currently your time to select a sample for your box, but stay tuned - the ability to choose a sample for your box is available the month prior to your scheduled box shipment</p>\r\n        }\r\n      </div>\r\n      <div className={ChoiceColumn}>\r\n        {!store.dataLoaded &&\r\n          <img\r\n            className={LoadingImage}\r\n            src=\"https://assets.bulubox.com/loading.gif\"\r\n            alt=\"loading\"\r\n            width=\"100\"\r\n          />\r\n        }\r\n        {store.dataLoaded && store.canChoose &&\r\n          <div>\r\n            <div>\r\n              {store.choices.map(choice => (\r\n                <Sample sample={choice} key={choice.id}/>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n      {store.canChoose &&\r\n        <p style={{fontSize: '12px', marginBottom: 0}}>*Sample selections are subject to availability.</p>\r\n      }\r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.6.15/browser-polyfill.min.js\"></script>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(SampleChoice)\r\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport SampleChoice from './SampleChoice'\r\n\r\nReactDOM.render(\r\n  <SampleChoice/>,\r\n  document.getElementById('sample-choice')\r\n)\r\n"],"sourceRoot":""}